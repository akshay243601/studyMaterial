How to change garbage collection for JVM.
What is memory management in Java8.
Why eclipse is not crashed when ther is out of memory error.

Minimum number of queues needed to implement the priority queue?
Two. One queue is used for actual storing of data and another for storing priorities.

In tree construction which is the suitable efficient data structure? (Array, Linked list, Stack, Queue)
Linked list is the suitable efficient data structure.

Whether Linked List is linear or Non-linear data structure?
According to Access strategies Linked list is a linear one. 
According to Storage Linked List is a Non-linear one.

 Which data structures is applied when dealing with a recursive function?

Recursion, which is basically a function that calls itself based on a terminating condition, makes use of the stack. Using LIFO, a call to a recursive function saves the return address so that it knows how to return to the calling function after the call terminates.

What is the complexity of binary search and linear serach.
O(log(n)), O(n) 

Can we use switch statement on String?
What is the use of static import.

When to use array list and link list
Accessing elements are faster with ArrayList, because it is index based.
But accessing is difficult with LinkedList. It is slow access. This is
to access any element, you need to navigate through the elements one by
one. But insertion and deletion is much faster with LinkedList, because
if you know the node, just change the pointers before or after nodes.
Insertion and deletion is slow with ArrayList, this is because, during
these operations ArrayList need to adjust the indexes according to
deletion or insetion if you are performing on middle indexes. Means,
an ArrayList having 10 elements, if you are inserting at index 5, then
you need to shift the indexes above 5 to one more.

Can we initialise uninitialized final variable?
Yes. We can initialise blank final variable in constructor, only in construtor.
The condition here is the final variable should be non-static.

What is shallow cloning and deep cloning of an object.

What is difference between Lambda Expression and Anonymous class (java 8)?

The key difference between Anonymous class and Lambda expression is the usage of 'this' keyword. In the anonymous classes, ‘this’ keyword resolves to anonymous class itself, whereas for lambda expression ‘this’ keyword resolves to enclosing class where lambda expression is written.

Another difference between lambda expression and anonymous class is in the way these two are compiled. Java compiler compiles lambda expressions and convert them into private method of the class. It uses invokedynamic instruction that was added in Java 7 to bind this method dynamically.


Can we create instance of Enum outside of Enum itself? If Not, Why?

Ans: No, you can not create enum instances outside of Enum boundry, because Enum doesn't have any public constructor, and compiler doesn't allow you to provide any public constructor in Enum

Write a Java program to check if a number is Prime or not? (solution)

Ans: A number is said prime if it is not divisible by any other number except itself. 1 is not considered prime, so your check must start with 2. Simplest solution of this to check every number until the number itself to see if its divisible or not. When Interviewer will ask you to improve, you can say that checking until square root of the number.

Use of Immutable Object in Java

Immutable objects are thread-safe so you will not have any synchronization issues.
Immutable objects are good Map keys and Set elements, since these typically do not change once created.
Immutability makes it easier to write, use and reason about the code (class invariant is established once and then unchanged)
Immutability makes it easier to parallelize your program as there are no conflicts among objects.
The internal state of your program will be consistent even if you have exceptions.
References to immutable objects can be cached as they are not going to change.


What machanism java support pass by reference or pass by value?

What are pass by reference and pass by value

When we would use observer pattern.

Ans: If we have requirement that if particular object change its state and on depending upon
This changes some or group of objects automatically change their state we need to implement observer pattern it will reduce coupling between objects.

Difference between Strategy and State design Pattern in Java?

Ans: State design pattern is used to define and manage the state of an object, while Strategy pattern is used to define a set of an interchangeable algorithm and let's client choose one of them. So Strategy pattern is a client driven pattern while Object can manage their state itself.

What is decorator pattern in Java? Can you give an example of Decorator pattern?

Ans: Decorator pattern is another popular Java design pattern question which is common because of its heavy usage in java.io package. BufferedReader and BufferedWriter are a good example of decorator pattern in Java

What is the difference between Decorator and Proxy pattern in Java?

Decorator pattern is used to implement functionality on an already created object, while a Proxy pattern is used for controlling access to an object.

One more difference between Decorator and the Proxy design pattern is that Decorator doesn't create an object, instead, it get the object in its constructor, while Proxy actually creates objects.

When to use Setter and Constructor Injection in Dependency Injection pattern?

Ans:Use Setter injection to provide optional dependencies of an object, while use Constructor iInjection to provide a mandatory dependency of an object, without which it can not work

What are some strategies to solve the N+1 SELECT problem in Hibernate? (detailed answer)

Ans: This is the follow-up question of previous Hibernate interview question. If you answer the last query correctly then you would be most likely asked this one. Here are some strategies to solve the N+1 problem:
1) pre-fetching in batches, this will reduce N+1 problem to N/K + 1 problem where  K is size of batch
2) subselect fetching strategy
3) disabling lazy loading

What is N+1 SELECT problem in Hibernate? 

Ans The N+1 SELECT problem is a result of lazy loading and load on demand fetching strategy. In this case, Hibernate ends up executing N+1 SQL queries to populate a collection of N elements. For example, if you have a List of N Items where each Item has a dependency on a collection of Bid object. Now if you want to find the highest bid for each item then Hibernate will fire 1 query to load all items and N subsequent queries to load Bid for each item. So in order to find the highest bid for each item your application end up firing N+1 queries.



